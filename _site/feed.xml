<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SurfaceW</title>
    <description>Little Dots accumulated to make a Difference.</description>
    <link>http://www.surfacew.com/</link>
    <atom:link href="http://www.surfacew.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 09 Jan 2015 05:17:00 +0800</pubDate>
    <lastBuildDate>Fri, 09 Jan 2015 05:17:00 +0800</lastBuildDate>
    <generator>Jekyll v2.1.1</generator>
    
      <item>
        <title>网络原理应考</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Author: SurfaceW， 我不是大神，也不是学霸，我只是大自然的搬运工 = = &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;老师上课的PPT&lt;/li&gt;
  &lt;li&gt;老师上课总复习PPT&lt;/li&gt;
  &lt;li&gt;计算机网络（第六版）&lt;/li&gt;
  &lt;li&gt;信安的考试试卷&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;网络原理的精髓思想&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;分层抽象&lt;/strong&gt;，提供：&lt;strong&gt;实体&lt;/strong&gt;、&lt;strong&gt;原语&lt;/strong&gt;、&lt;strong&gt;服务&lt;/strong&gt;、&lt;strong&gt;接口&lt;/strong&gt;和&lt;strong&gt;协议&lt;/strong&gt;（定义&lt;em&gt;报文&lt;/em&gt;（本质是数据结构）、数据帧、头的范式）&lt;/li&gt;
  &lt;li&gt;局部性原理的应用（Cache）&lt;/li&gt;
  &lt;li&gt;计时器(TTL)思想、滑动窗口思想&lt;/li&gt;
  &lt;li&gt;Socket思想，API的思想&lt;/li&gt;
  &lt;li&gt;逻辑地址和物理地址的抽象&lt;/li&gt;
  &lt;li&gt;层次抽象和性能代价的折衷（对复杂结构的掩盖所需要付诸的额外代价的矛盾性）&lt;/li&gt;
  &lt;li&gt;网络协议的构成：语法、语义和同步&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其实说白了，计算机科学诸多分支中共享着很多精髓的设计思想。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;第一章 概述&lt;/h2&gt;

&lt;h3 id=&quot;section-2&quot;&gt;(考点) 因特网的概念，特点以及各层的工作对象及其组成总览&lt;/h3&gt;
&lt;p&gt;理解：互联网可以由多种异构网络互联组成这句话的含义，连接异构的网络的物理设备叫做网关。
三网的概念：电信（电话、传真服务）网络、有线电视网络、计算机网络。&lt;/p&gt;

&lt;p&gt;计算机网络的分类：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;广域网 WAN / 城域网 MAN / 局域网 LAN / 个人（无线）区域网 PAN/WPAN&lt;/li&gt;
  &lt;li&gt;公用网 / 专用网&lt;/li&gt;
  &lt;li&gt;接入网 AN&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;各层次和对应关键词&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;物理层
    &lt;ul&gt;
      &lt;li&gt;负责比特传输&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;数据链路层
    &lt;ul&gt;
      &lt;li&gt;负责数据帧传输、数据报纠错&lt;/li&gt;
      &lt;li&gt;点对点协议 PPP&lt;/li&gt;
      &lt;li&gt;CSMA/CD 协议&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;网络层
    &lt;ul&gt;
      &lt;li&gt;负责数据报传输、寻址、路由选择&lt;/li&gt;
      &lt;li&gt;IP协议&lt;/li&gt;
      &lt;li&gt;ICMP协议&lt;/li&gt;
      &lt;li&gt;路由选择协议
        &lt;ul&gt;
          &lt;li&gt;RIP / OSPF / BGP&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;网际组管理协议 IGMP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;运输层
    &lt;ul&gt;
      &lt;li&gt;作用：两个主机中进程之间的通信提供通用的数据传输服务。提供：复用和分用的功能。也会提供分组和纠错处理等功能。&lt;/li&gt;
      &lt;li&gt;用户数据报 UDP
        &lt;ul&gt;
          &lt;li&gt;提供无连接的、尽最大努力的数据传输服务&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;传输控制协议 TCP
        &lt;ul&gt;
          &lt;li&gt;面向连接的、可靠的数据传输服务，负责可靠字节流的传输、流量控制、拥塞控制&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;应用层
    &lt;ul&gt;
      &lt;li&gt;作用：通过应用进程之间的交互来完成特定的网络应用。&lt;/li&gt;
      &lt;li&gt;域名服务 DNS&lt;/li&gt;
      &lt;li&gt;远程终端 TELNET&lt;/li&gt;
      &lt;li&gt;文件传输协议 FTP&lt;/li&gt;
      &lt;li&gt;电子邮件传送协议 SMTP&lt;/li&gt;
      &lt;li&gt;邮件读取协议 POP3 / IMAP&lt;/li&gt;
      &lt;li&gt;动态主机配置协议 DHCP&lt;/li&gt;
      &lt;li&gt;超文本传送协议 HTTP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-4&quot;&gt;各层次对应的中间设备&lt;/h4&gt;
&lt;p&gt;理解中间设备的概念：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;网卡中具有适配器 Adapter&lt;/li&gt;
  &lt;li&gt;物理层使用的中间设备：转发器 Repeater&lt;/li&gt;
  &lt;li&gt;数据链路层使用的中间设备：网桥或者桥接器 Bridge
    &lt;ul&gt;
      &lt;li&gt;转发器或网桥的作用在于扩大网络&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;网络层使用的中间设备：路由器 Router
    &lt;ul&gt;
      &lt;li&gt;网络互连和路由选择，路由器的本质是一台专用的计算机，用来在互联网中进行路由选择&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;网络层以上使用的中间设备：网关 Gateway
    &lt;ul&gt;
      &lt;li&gt;网关是用于连接两个不兼容的系统需要在高层进行协议转换。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-5&quot;&gt;因特网的组成，网络边缘与核心&lt;/h3&gt;
&lt;p&gt;Internet的概述：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;理解概念：结点 node 、链路 link 、网络服务提供商 ISP、因特网交换点 IXP、标准化机构：RFC&lt;/li&gt;
  &lt;li&gt;因特网的结构：主干 ISP -&amp;gt; 地区 ISP -&amp;gt; 本地 ISP -&amp;gt; 公司、校园、组织团体&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;因特网的组成：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;边缘部分：所有连接在因特网上的主机组成（端系统）。这部分是用户直接使用的，用来进行通信和资源共享。&lt;/li&gt;
  &lt;li&gt;核心部分：由大量网络和链接这些网络的&lt;strong&gt;路由器&lt;/strong&gt;组成，为边缘部分提供服务。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-6&quot;&gt;服务方式&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;客户-服务器方式 C/S&lt;/li&gt;
  &lt;li&gt;对等连接方式 P2P&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-7&quot;&gt;交换方式&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;电路交换
    &lt;ul&gt;
      &lt;li&gt;过程：建立连接 -&amp;gt; 通话 -&amp;gt; 释放连接，整个报文的比特流连续地从源点直达终点，如同在管道中传送。&lt;/li&gt;
      &lt;li&gt;特点：通话过程会一直占用端到端的通信资源，因而传输效率往往很低。在端到端之间建立连接也有成本消耗。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;分组交换
    &lt;ul&gt;
      &lt;li&gt;特点：&lt;strong&gt;存储转发技术&lt;/strong&gt;，将报文划分为几个分组的概念，在数据前加入首部，构成一个分组 Packet。整个报文先传送到相邻的结点，全部存储下来以后，在转发到下一个结点。&lt;/li&gt;
      &lt;li&gt;优点：高效、灵活、迅速、可靠。&lt;/li&gt;
      &lt;li&gt;参考书上 P15-16 理解&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;报文交换
    &lt;ul&gt;
      &lt;li&gt;特点：单个分组（只是整个报文的一部分）传送到相邻结点，存储下来，在转发。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;衡量他们之间的使用情形：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;若要连续传送大量数据，且传送时间大于连接建立时间 —— 电路交换&lt;/li&gt;
  &lt;li&gt;分组交换比报文交换的延时小，也同时具有更好的灵活性&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-8&quot;&gt;计算机网络的性能指标&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;(考点) 时延：&lt;strong&gt;总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;发送时延 = 数据帧长度 (b) ➗ 发送速率 (b/s)&lt;/li&gt;
      &lt;li&gt;传播时延 = 信道长度 (m) ➗ 信道上信号的传输速率 (m/s)&lt;/li&gt;
      &lt;li&gt;处理时延 = 主机、路由在收到分组时所花费的用于处理数据的时间&lt;/li&gt;
      &lt;li&gt;排队时延 = 在路由器中开始排队直到被处理所需要的时间&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;速率：b/s kb/s Mb/s Gb/s Tb/s&lt;/li&gt;
  &lt;li&gt;宽带
    &lt;ul&gt;
      &lt;li&gt;含义一：信号具有的频带宽度，单位 Hz&lt;/li&gt;
      &lt;li&gt;含义二：最高数据率，单位 bit/s&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;吞吐量：单位时间内，通过某个网络的数据量&lt;/li&gt;
  &lt;li&gt;时延宽带积 = 传播时延(s) * 带宽(bit/s)&lt;/li&gt;
  &lt;li&gt;往返时间 RTT：从发送方发送数据开始，到接收方确认所总共经历的时间&lt;/li&gt;
  &lt;li&gt;利用率：
    &lt;ul&gt;
      &lt;li&gt;信道利用率&lt;/li&gt;
      &lt;li&gt;网络利用率 = 1 - 网络当前时延 / 网络空闲时延&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-9&quot;&gt;计算机网络体系结构&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;（考点）协议栈及各层的简单功能，端到端的数据封装、传送的顺序&lt;/strong&gt; 书上 P24 - 35 概览&lt;/p&gt;

&lt;h2 id=&quot;section-10&quot;&gt;第二章 物理层&lt;/h2&gt;

&lt;h3 id=&quot;section-11&quot;&gt;关键术语&lt;/h3&gt;
&lt;p&gt;基带信号：来自信源的信号
带宽：传输信道的可用频率范围&lt;/p&gt;

&lt;h3 id=&quot;section-12&quot;&gt;信道的基本概念&lt;/h3&gt;
&lt;p&gt;信道：信道一般是用来表示某一个方向传送信息的媒体。
单向通行：单工信道 
双向交替通行：半双工信道
双向通信：全双工信道&lt;/p&gt;

&lt;h3 id=&quot;section-13&quot;&gt;数据通信基本概念&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;一个数据通信系统可以划分为三大部分：源系统、传输系统和目的系统。从中会有模拟信号和数字信号的转变。&lt;/li&gt;
  &lt;li&gt;常用的编码方式：曼彻斯特编码：位周期中心的向上跳变代表 0， 位周期中心的向下跳变代表 1，亦可以反过来定义。&lt;/li&gt;
  &lt;li&gt;基本的通带调制方法：调幅、调频、调相&lt;/li&gt;
  &lt;li&gt;信道的极限容量
    &lt;ul&gt;
      &lt;li&gt;信道能够通过的频率范围&lt;/li&gt;
      &lt;li&gt;信噪比
        &lt;ul&gt;
          &lt;li&gt;信道的极限信息传输速率 C = WLog(1 + S/N)(b/s) 其中S/N为信噪比，即：信息的功率与噪声功率之比，可见信噪比越大，传输速率越快；再者，如果让每一个码元能够携带更多的bit信息，那么速率也会越快。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-14&quot;&gt;导向传输媒体和非导向传输媒体&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;导向型传输媒体
    &lt;ul&gt;
      &lt;li&gt;双绞线 —— 使用十分广泛，性价比高&lt;/li&gt;
      &lt;li&gt;同轴电缆 —— 有线电视网络使用较多&lt;/li&gt;
      &lt;li&gt;光缆（光纤）—— 主干网络，要求速度较高的局域网&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;非导向型传输媒体
    &lt;ul&gt;
      &lt;li&gt;不同频率的无线电&lt;/li&gt;
      &lt;li&gt;微波通信（地面微波接力、卫星通信）
        &lt;ul&gt;
          &lt;li&gt;主要特点：信道容量大，频率段高，频率范围广；干扰小，传输质量高；&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-15&quot;&gt;信道复用技术&lt;/h3&gt;

&lt;p&gt;关键在于：多设备共享一个信道，提高信道的利用率。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;频分复用：用户占用固定的频带，让所有用户在同样的时间里占用不同的带宽（频率带宽）资源。&lt;/li&gt;
  &lt;li&gt;时分复用：将时间划分为一段段等长的时分复用帧，每一个时分复用的用户在每一个TDM帧中占有固定序号的时间间隙。使用户在不同的时间占有相同的频带宽度。&lt;/li&gt;
  &lt;li&gt;统计时分复用：改进的时分复用，能提高通信信道的利用率。利用异步时分复用的方式，将数据帧缓存到STDM帧中，然后发送出去，以提高信道利用率。&lt;/li&gt;
  &lt;li&gt;波分复用 WDM：为光的频分复用。&lt;/li&gt;
  &lt;li&gt;码分复用 CDM / CDMA 码分多址
    &lt;ul&gt;
      &lt;li&gt;主要特点：各个用户使用经过特殊挑选的码型进行复用，不会造成干扰，具有抗干扰的能力。&lt;/li&gt;
      &lt;li&gt;（考点）重点，具体的计算方法参考书上：P54
        &lt;ul&gt;
          &lt;li&gt;保证分配的一对码片的正交性&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-16&quot;&gt;宽带接入技术&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;ADSL技术：利用数字技术对现代的模拟电话线改造，调制解调器（数模转换）&lt;/li&gt;
  &lt;li&gt;FTTx技术：光纤技术，光电信号转换。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-17&quot;&gt;第三章 数据链路层&lt;/h2&gt;

&lt;p&gt;数据链路层主要使用：点对点信道和广播信道。&lt;/p&gt;

&lt;h3 id=&quot;section-18&quot;&gt;基本概念&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;数据链路概念
    &lt;ul&gt;
      &lt;li&gt;链路的概念：从一个结点到相邻结点的物理线路（有线或者无线），而中间没有其他的交换结点。&lt;/li&gt;
      &lt;li&gt;数据链路的概念：把实现控制数据传输的协议的硬件和软件加到链路上就成了数据链路。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;帧：链路层将上层传来的数据报封装成的数据的称谓&lt;/li&gt;
  &lt;li&gt;MAC地址：硬件设备的网络地址，具有唯一性，48位长&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关键问题：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;封装成帧
    &lt;ul&gt;
      &lt;li&gt;了解概念：MTU 最大传送单元&lt;/li&gt;
      &lt;li&gt;理解帧定界的概念 SOH / EOT 控制符&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;透明传输
    &lt;ul&gt;
      &lt;li&gt;了解如何解决透明传输的问题（转义字符的插入，字节填充、字符填充）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;差错检测
    &lt;ul&gt;
      &lt;li&gt;了解：循环冗余检验 CRC 的检错技术&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ppp&quot;&gt;PPP协议特点、状态转换&lt;/h3&gt;
&lt;p&gt;点对点协议 PPP，只支持&lt;strong&gt;全双工电路&lt;/strong&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;需要满足的需求：
    &lt;ul&gt;
      &lt;li&gt;简单：不需要纠错，不需要序号，不需要流量控制&lt;/li&gt;
      &lt;li&gt;封装成帧：必须规定特殊的字符为帧界定符，以便能够从接收到的比特流中界定帧的开始和结束位置&lt;/li&gt;
      &lt;li&gt;透明性：利用转义字符避免数据和界定符的重复，例如：零比特填充法&lt;/li&gt;
      &lt;li&gt;支持多种网络层协议&lt;/li&gt;
      &lt;li&gt;支持多种类型的链路&lt;/li&gt;
      &lt;li&gt;差错检测：如有错误，立刻丢弃&lt;/li&gt;
      &lt;li&gt;检测链接状态：能够检测链路是否处于正常工作状态&lt;/li&gt;
      &lt;li&gt;最大传送单元：最大&lt;strong&gt;数据&lt;/strong&gt;部分的长度，不是帧的总长 MTU&lt;/li&gt;
      &lt;li&gt;网络层地址协商&lt;/li&gt;
      &lt;li&gt;数据压缩协商&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;协议的组成：
    &lt;ul&gt;
      &lt;li&gt;一个将IP数据报封装到串行链路的方法。&lt;/li&gt;
      &lt;li&gt;一个用来建立、配置和测试数据链路连接的：链路控制协议 LCP&lt;/li&gt;
      &lt;li&gt;一套网络控制协议 NCP&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;（考点）协议的&lt;strong&gt;工作状态&lt;/strong&gt;及其状态转换
    &lt;ul&gt;
      &lt;li&gt;书P77 （重要）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-19&quot;&gt;以太网&lt;/h3&gt;

&lt;p&gt;了解：由集线器构建的星形网，环状网，总线网搭建起来的以太网架构。
理解：共享信道的概念。
了解：静态划分信道（频分复用、时分复用、波分复用和码分复用等，但由于代价太高一般不适合局域网），动态媒体接入控制（随机接入法）。
理解适配器的作用：计算机与外界局域网的连接是通过通信适配器进行的。网络接口卡 NIC，适配器的一个重要功能就是进行数据串行、并行传输的转换。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;（考点）10baseT：星型以太网，利用集线器构成&lt;/li&gt;
  &lt;li&gt;（考点）&lt;strong&gt;CSMA/CD&lt;/strong&gt; 协议 载波监听多点接入/碰撞检测
    &lt;ul&gt;
      &lt;li&gt;采用无连接的工作方式，不编号，尽量最大努力的交付即不可靠交付&lt;/li&gt;
      &lt;li&gt;高层决定差错重传，同一时刻只允许一台计算机发送数据&lt;/li&gt;
      &lt;li&gt;必须在发送前检测信号，并且要一边发送，一边监听&lt;/li&gt;
      &lt;li&gt;（考点）理解其工作原理，书 P83 - 86 总结&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;（考点）曼彻斯特编码
    &lt;ul&gt;
      &lt;li&gt;以太网发送的数据都使用曼彻斯特编码的信号&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;以太网的 Mac 层
    &lt;ul&gt;
      &lt;li&gt;理解 Mac 地址的概念，和其唯一性的保障&lt;/li&gt;
      &lt;li&gt;理解：单播帧、广播帧和多播帧的概念&lt;/li&gt;
      &lt;li&gt;了解 Mac 帧的格式&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;了解高速以太网是一种怎样的存在&lt;/li&gt;
  &lt;li&gt;了解以太网的宽带接入（PPPoE）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;switch&quot;&gt;Switch&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;理解物理层扩展以太网的方法（集线器）&lt;/li&gt;
  &lt;li&gt;（考点）理解在数据链路层扩展以太网的方法（网桥）
    &lt;ul&gt;
      &lt;li&gt;网桥的类型
        &lt;ul&gt;
          &lt;li&gt;透明网桥：即插即用的设备
            &lt;ul&gt;
              &lt;li&gt;开始转发表为空，随后&lt;strong&gt;自学习&lt;/strong&gt;算法处理收到的帧&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;源路由网桥：将详细路由信息放在帧首部中的网桥设备&lt;/li&gt;
          &lt;li&gt;多接口网桥：以太网交换机
            &lt;ul&gt;
              &lt;li&gt;优势：交换机能够同时联通许多对接口，使每一对接口都能够像独占传输媒体那样，无碰撞地传输数据。再者，也是即插即用，通过自学习算法建立转发表，支持VLAN&lt;/li&gt;
              &lt;li&gt;虚拟局域网服务
                &lt;ul&gt;
                  &lt;li&gt;理解 LAN 和 VLAN 的概念&lt;/li&gt;
                  &lt;li&gt;杜绝广播风暴的优势&lt;/li&gt;
                  &lt;li&gt;了解以太网Mac帧的 VLAN Tag 标记的存在意义&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;了解网桥的内部大致结构（转发表、接口）&lt;/li&gt;
      &lt;li&gt;理解网桥过滤通信量、增大吞吐量的原因，了解其优势：扩大物理乏味、提高可靠性、可互联不同物理层、不同Mac子层和不同速率的以太网。&lt;/li&gt;
      &lt;li&gt;了解网桥的缺点：增加延时、无流量控制容易产生帧丢失、广播风暴&lt;/li&gt;
      &lt;li&gt;（考点 · 重点）&lt;strong&gt;自学习方式和转发表的建立&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;记录源地址 + 对应的进入网桥的接口&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;理解自学习的一般步骤&lt;/strong&gt; P99&lt;/li&gt;
          &lt;li&gt;透明网桥也使用了生成树算法避免发送帧兜圈子的现象&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-20&quot;&gt;第四章 网络层&lt;/h2&gt;

&lt;h3 id=&quot;section-21&quot;&gt;网络层功能和协议&lt;/h3&gt;

&lt;h4 id=&quot;section-22&quot;&gt;网络层提供两种服务：虚电路服务和数据报服务，理解两种服务的对比。&lt;/h4&gt;
&lt;p&gt;网络层向上只提供&lt;em&gt;简单灵活的、无连接的、尽最大努力交付&lt;/em&gt;的数据服务。网络层&lt;em&gt;不提供服务质量&lt;/em&gt;的承诺。&lt;/p&gt;

&lt;p&gt;理解直接交付、间接交付的概念。&lt;/p&gt;

&lt;h3 id=&quot;ip&quot;&gt;网际协议 IP&lt;/h3&gt;
&lt;p&gt;与IP协议配套的三个协议：ARP(RARP) / ICMP / IGMP&lt;/p&gt;

&lt;h4 id=&quot;ip-1&quot;&gt;（考点）分类的IP地址&lt;/h4&gt;
&lt;p&gt;参考书上 P118&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;网络号、端口号的概念&lt;/li&gt;
  &lt;li&gt;A-E类网址划分的方法和对应的作用，了解不同地址分配数量的计算&lt;/li&gt;
  &lt;li&gt;常用的三类IP地址中，0.0.0.0 本网络概念 以及 127.x.x.x 环回地址的概念，以及 1.1.1.1 所有网络的概念&lt;/li&gt;
  &lt;li&gt;理解IP地址的如下特点：
    &lt;ul&gt;
      &lt;li&gt;路由器的转发分组依据是：网络号&lt;/li&gt;
      &lt;li&gt;路由器所连接的是多个不同类型的网络号的网络&lt;/li&gt;
      &lt;li&gt;转发器和网桥建立起的网络具有相同的网络号&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ip-2&quot;&gt;IP地址与硬件地址&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;理解逻辑地址(IP)和物理地址(MAC)的区别
    &lt;ul&gt;
      &lt;li&gt;路由器转发中，IP不变，MAC改变&lt;/li&gt;
      &lt;li&gt;IP抽象层中互联网上只能够看见IP数据报&lt;/li&gt;
      &lt;li&gt;局域网链路层中，只能够看见MAC帧&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;理解报文层层封装和拆解的概念&lt;/li&gt;
  &lt;li&gt;（考点）地址解析协议 ARP 书上 P123
    &lt;ul&gt;
      &lt;li&gt;理解ARP的功能：IP -&amp;gt; MAC&lt;/li&gt;
      &lt;li&gt;理解ARP的原理：高速缓存了一个IP/MAC地址表&lt;/li&gt;
      &lt;li&gt;理解ARP协议的工作过程
        &lt;ul&gt;
          &lt;li&gt;若有，则给之&lt;/li&gt;
          &lt;li&gt;若无，则请求分组，相互 Cache 分组响应的数据&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;注意：对象是同一局域网内的机器，若要寻求其他的，必须通过路由器见解转移后获取&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ipv4&quot;&gt;（考点）IPV4&lt;/h4&gt;
&lt;p&gt;书上P127（重点）
IP数据报格式：首部（固定 + 可变） + 数据部分&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;首部格式
    &lt;ul&gt;
      &lt;li&gt;理解每一个bit的含义（考试要考）书上P127&lt;/li&gt;
      &lt;li&gt;版本4 / 首部长度4 / 区分服务8 / 总长度16 / 标识16 / 标志3 / 片偏移13 / 生存时间8 / 协议8 / 首部校验和16 / 源地址32 / 目的地址32
        &lt;ul&gt;
          &lt;li&gt;掌握首部校验和的计算方法（要考）&lt;/li&gt;
          &lt;li&gt;理解生存时间的概念和意义&lt;/li&gt;
          &lt;li&gt;掌握片偏移的作用和计算方法（要考：分片）&lt;/li&gt;
          &lt;li&gt;注意：&lt;strong&gt;这里的校验和，只校验首部&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;理解IP层转发分组的流程
    &lt;ul&gt;
      &lt;li&gt;一个路由器 -&amp;gt; 下一个路由器的过程，其中最重要的信息（目的网络地址，下一跳地址）&lt;/li&gt;
      &lt;li&gt;了解特定主机路由和默认路由的概念&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(重要)&lt;strong&gt;分组转发算法&lt;/strong&gt; 书上P133
    &lt;ul&gt;
      &lt;li&gt;理解通用过程，并能够完整复述&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;数据报分片&lt;/p&gt;

&lt;h3 id=&quot;cidr&quot;&gt;子网划分 与 CIDR&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;子网划分的目的在于：提高IPV4的利用率和灵活性，但是减少了能够连接在网络上的总主机数目&lt;/li&gt;
  &lt;li&gt;CIDR的目的在于：扩展可用的地址空间&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-23&quot;&gt;划分子网&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;理解二级地址和三级地址的概念&lt;/li&gt;
  &lt;li&gt;（要考）理解三级地址的结构和子网寻址的方法 P137&lt;/li&gt;
  &lt;li&gt;（要考）理解子网掩码的概念，能够根据子网掩码求取子网的网络地址 P138&lt;/li&gt;
  &lt;li&gt;（重要）掌握使用子网的时候分组转发算法 P139&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;cidr-&quot;&gt;CIDR 无分类编址&lt;/h4&gt;
&lt;p&gt;超网构建&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;理解CIDR的地址格式&lt;/li&gt;
  &lt;li&gt;能够计算对应地址的最小地址和最大地址&lt;/li&gt;
  &lt;li&gt;了解路由聚合的概念
    &lt;ul&gt;
      &lt;li&gt;IP地址由网络前缀和下一跳地址组成。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;了解最长前缀匹配的概念&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;icmp-ping&quot;&gt;ICMP ping&lt;/h3&gt;
&lt;p&gt;网际控制报文协议有两类报文：ICMP差错报告报文和ICMP询问报文
注意：ICMP报文是恰如在IP数据报的数据部分的&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;报文格式：三个字段：类型、代码和校验和
    &lt;ul&gt;
      &lt;li&gt;注意区分这里的校验和与：IP数据报中、TCP数据报中校验和的不同&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;差错报文的类型：
    &lt;ul&gt;
      &lt;li&gt;终点不可达 —— 不可达&lt;/li&gt;
      &lt;li&gt;源点抑制 —— 拥塞丢失&lt;/li&gt;
      &lt;li&gt;时间超时 —— 路由器收到TTL为0的数据报时，所发送的反馈&lt;/li&gt;
      &lt;li&gt;参数问题&lt;/li&gt;
      &lt;li&gt;改变路由（重定向）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;询问报文的类型
    &lt;ul&gt;
      &lt;li&gt;回送请求和回答&lt;/li&gt;
      &lt;li&gt;时间戳请求和回答&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ICMP的应用
    &lt;ul&gt;
      &lt;li&gt;ping 的命令和返回格式的意义&lt;/li&gt;
      &lt;li&gt;跟踪访问路由的顺序的机制&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-24&quot;&gt;路由选择协议&lt;/h3&gt;
&lt;p&gt;理解分层次的路由选择协议的设计初衷。理解自治系统 AS 的概念。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;内部网关协议 IGP
    &lt;ul&gt;
      &lt;li&gt;（考点）RIP 路由信息协议
        &lt;ul&gt;
          &lt;li&gt;一种分布式的基于距离向量的路由选择协议&lt;/li&gt;
          &lt;li&gt;最大优点：简单，实现开销小，适合小规模网络&lt;/li&gt;
          &lt;li&gt;缺点：网络出现故障时，要经过比较长的时间才能将此信息传送到所有的路由器&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;必须会初始化RIP路由表和动态更新的过程&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;RIP使用UDP数据报进行传送&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;（考点）OSPF 开放最短路径优先
        &lt;ul&gt;
          &lt;li&gt;使用的是：分布式的链路状态协议&lt;/li&gt;
          &lt;li&gt;与RIP的区别
            &lt;ul&gt;
              &lt;li&gt;泛洪的方式向自治系统的所有路由器发送信息&lt;/li&gt;
              &lt;li&gt;发送的信息是和本路由器相邻的所有路由器的链路状态&lt;/li&gt;
              &lt;li&gt;只有当链路状态发生变化的时候，才进行泛洪&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;所有的路由器最终都维护一个链路状态数据库，也就是全网的拓扑结构图，这个拓扑图在全网范围内是一致的，而后用单源最短路径算法进行信息传送&lt;/li&gt;
          &lt;li&gt;OSPF的更新过程收敛更快&lt;/li&gt;
          &lt;li&gt;OSPF使用的是IP数据报&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;外部网关协议
    &lt;ul&gt;
      &lt;li&gt;不同自制系统之间的信息传递&lt;/li&gt;
      &lt;li&gt;BGP 边界网关协议
        &lt;ul&gt;
          &lt;li&gt;采用路径向量路由选择协议&lt;/li&gt;
          &lt;li&gt;使用的是TCP连接，端口号179，然后建立BGP会话&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DV和LS算法的特点和对比
    &lt;ul&gt;
      &lt;li&gt;距离向量算法&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ip-3&quot;&gt;IP多播&lt;/h3&gt;
&lt;p&gt;一对多通信，理解单播和多播的概念以及区别。
了解多播路由器、IP多播的概念。
注意：多播地址只能够用于目的地址，不能用于源地址，并且多播不会产生ICMP差错报文
多播的方式：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Internet上的多播&lt;/li&gt;
  &lt;li&gt;局域网上的硬件多播&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IP多播需要两种协议：IGMP（网际组管理协议） 和 多播路由选择协议&lt;/p&gt;

&lt;h3 id=&quot;vpn--nat-&quot;&gt;VPN 和 NAT 概念&lt;/h3&gt;
&lt;p&gt;#### VPN
理解专用地址 10.x.x.x 的概念&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;了解：本地地址和全球地址的区别&lt;/li&gt;
  &lt;li&gt;注意：Internet中所有的路由器，对目的地址是专用地址的数据报一律不进行转发&lt;/li&gt;
  &lt;li&gt;了解：利用 Internet 网络构建的隧道技术构成虚拟专用网的模型&lt;/li&gt;
  &lt;li&gt;了解：内联网、外联网和远程接入VPN的概念&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;nat&quot;&gt;NAT&lt;/h4&gt;
&lt;p&gt;网络地址转换 NAT&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;理解NAT的作用
    &lt;ul&gt;
      &lt;li&gt;专用网IP -&amp;gt; 全球IP&lt;/li&gt;
      &lt;li&gt;全球IP反寻请求主机的过程&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;NAPT：了解网络地址与端口号转换
    &lt;ul&gt;
      &lt;li&gt;利用TCP/UDP的端口号来实现源IP地址和全球IP地址的转换&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ipv6&quot;&gt;IPV6&lt;/h3&gt;

&lt;p&gt;为了解决IPV4地址不足而设计的64为地址。&lt;/p&gt;

&lt;h2 id=&quot;section-25&quot;&gt;第五章 传输层&lt;/h2&gt;
&lt;p&gt;作用：提供不同主机上进程间的通信。是端到端通信，通信的主体是&lt;strong&gt;进程&lt;/strong&gt;。在发送端，运输层从应用层接收报文，将报文分割成数据段，传递给网络层；在接收端，运输层从网络层获取数据段，重组成报文，交送给应用层。&lt;/p&gt;

&lt;p&gt;运输层的复用与分用：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;端口号：也叫做端口，是一种地址，用于在主机中标识进程。
    &lt;ul&gt;
      &lt;li&gt;了解：三种端口号：熟知端口号 0 - 1023 / 登记端口号 / 客户端端口号或短暂端口号&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;将应用进程与外界通信的接口称为套接字，一个套接字只能属于一个进程，一个进程可以有多个套接字。&lt;/li&gt;
  &lt;li&gt;复用：从多个进程的多个socket接收数据，封装首部，传递给网络层。&lt;/li&gt;
  &lt;li&gt;分用：从网络层接收到数据，递交到适合的socket中，等待应用进程处理。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tcp&quot;&gt;TCP&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;面向连接的，可靠的TCP&lt;/strong&gt;，点到点的，按序的字节流服务，没有信息边界
可靠传输协议：为上层提供不出错，不丢失，不乱序的通信。
过程：连接建立，传输数据，释放连接
TCP是可靠的，顺序的，流水的，具有拥塞控制和流量控制的能力
TCP是全双工通信的&lt;/p&gt;

&lt;p&gt;TCP的连接：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TCP连接的端点叫做：套接字 Socket 或插口
    &lt;ul&gt;
      &lt;li&gt;套接字 Socket = (IP:Port)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;每一条TCP连接唯一地被通信两端的两个端点（套接字）所确定：
    &lt;ul&gt;
      &lt;li&gt;TCP连接 ::= {socket1, socket2} = {(IP1:port1), (IP2, port2)}&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-26&quot;&gt;（考点）首部格式&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;TCP段格式：源端口 16bit / 目的端口 16bit / 顺序号 32bit / 确认号 32bit / 数据偏移 4bit / 保留 6bit / 6bit标志位：URG&lt;/td&gt;
          &lt;td&gt;ACK&lt;/td&gt;
          &lt;td&gt;PSH&lt;/td&gt;
          &lt;td&gt;RST&lt;/td&gt;
          &lt;td&gt;SYN&lt;/td&gt;
          &lt;td&gt;FIN / 窗口 16bit / 校验和 16bit / 紧急指针 16bit / 选项（可变长） / 填充 / 数据段&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;ul&gt;
      &lt;li&gt;若确认号 = N, 则表明：到序号 N-1 为止的所有数据都已正确收到&lt;/li&gt;
      &lt;li&gt;保留位置0&lt;/li&gt;
      &lt;li&gt;URG = 1 时，紧急指针有效&lt;/li&gt;
      &lt;li&gt;ACK = 1 时，确认号字段有效，TCP规定，在连接建立之后所有传送的报文段都必须把ACK置1&lt;/li&gt;
      &lt;li&gt;PSH 推送，当PSH = 1 时，接收方会尽快地交付接收应用进程，不再等到整个缓存都填满了后再向上交付。&lt;/li&gt;
      &lt;li&gt;RST = 1 时，表示严重差错，必须释放连接，并重新连接。&lt;/li&gt;
      &lt;li&gt;SYN 在连接建立时用来同步序号。当 SYN = 1 而 ACK = 0 时，表明这一是一个连接请求的报文段。&lt;/li&gt;
      &lt;li&gt;FIN = 1 时，用于释放连接。&lt;/li&gt;
      &lt;li&gt;窗口指的是发送报文段的一方的接收窗口（而不是自己的发送窗口）。窗口值告诉对方：从本报文段首部中的确认号算起接收方目前允许对方发送的数据量。注意&lt;strong&gt;窗口字段明确指出了现在允许对方发送的数据量。窗口值是经常在动态变化着的&lt;/strong&gt;。&lt;/li&gt;
      &lt;li&gt;校验和，计算方式与UDP校验和的计算方式一致。&lt;/li&gt;
      &lt;li&gt;紧急指针，用于指向紧急数据的末尾在报文中的位置。注意：即使是窗口为0，也可以发送紧急数据。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-27&quot;&gt;（考点）可靠传输&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;工作原理
    &lt;ul&gt;
      &lt;li&gt;停止等待协议&lt;/li&gt;
      &lt;li&gt;信道利用率 U = Td / (Td + RTT + Ta)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;顺序号&lt;/li&gt;
  &lt;li&gt;确认号含义&lt;/li&gt;
  &lt;li&gt;滑动窗口
    &lt;ul&gt;
      &lt;li&gt;缓冲区的管理&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;理解滑动窗口&lt;/strong&gt;的数据传输方式和过程&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-28&quot;&gt;（考点）拥塞控制、流量控制&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;流量控制
    &lt;ul&gt;
      &lt;li&gt;利用滑动窗口实现流量控制
        &lt;ul&gt;
          &lt;li&gt;发送方发送的窗口不能超过接收方给出的接收窗口的数值。&lt;/li&gt;
          &lt;li&gt;利用持续计器发送一个零窗口的探测报文段来打破死锁局面。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;rwnd（接收窗口）状态变量&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;拥塞控制
  拥塞控制的目的在于：防止过多的数据注入到网络中。cwnd（拥塞窗口）状态变量：取决于网络的拥塞程度，并且在动态地变化。发送方让自己的发送窗口等于拥塞窗口。
    &lt;ul&gt;
      &lt;li&gt;慢开始和拥塞避免
        &lt;ul&gt;
          &lt;li&gt;由小到大逐渐增大拥塞窗口的数值&lt;/li&gt;
          &lt;li&gt;乘法减小和加法增大&lt;/li&gt;
          &lt;li&gt;拥塞避免算法的思路是让拥塞窗口的cnwd逐渐增大，一旦发生拥塞，将窗口置1后增大到新的 ssthresh值&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;快重传和快恢复&lt;/li&gt;
      &lt;li&gt;随机早期检测RED&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-29&quot;&gt;（考点）连接建立、数据传输、撤销整个过程&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;请务必认真看书理解&lt;/strong&gt;
- TCP连接建立
	- 传输控制块TCB的概念
	- 三次握手
- TCP数据传送
- TCP连接释放
	- 四次握手
	- 2MSL计时器(最长报文段寿命) / 保活计时器&lt;/p&gt;

&lt;p&gt;理解TCP的&lt;strong&gt;有限状态机&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;udp&quot;&gt;UDP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;无连接，不可靠的UDP&lt;/strong&gt;，不使用 拥塞控制，支持一对一、一对多和多对多的面向报文的交互通信。&lt;/li&gt;
  &lt;li&gt;尽最大努力交付，不可靠，不保证顺序。&lt;/li&gt;
  &lt;li&gt;首部开销小，8Bytes。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;tcp-&quot;&gt;（考点）基本原理、与 TCP 的不同之处&lt;/h4&gt;
&lt;p&gt;只在IP协议的基础上进行了简单扩展&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;添加了：复用 / 分用和差错检查的功能&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UDP首部格式：伪首部 / 源端口 / 目的端口 / 长度 / 校验和 / 数据部分&lt;/p&gt;

&lt;h4 id=&quot;section-30&quot;&gt;（考点）首部校验和&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;必须会计算！！&lt;/strong&gt; 书上P195
注意：伪首部既不想上，也不向下提交，只为用于计算校验和。
注意：首部校验和的计算方法和IP数据报的首部校验和的方法相似，只不过，IP数据报的校验和只检查IP数据报的首部，&lt;strong&gt;但UDP的检验和是把首部和数据部分一起检查的&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;section-31&quot;&gt;第六章 应用层&lt;/h2&gt;

&lt;h3 id=&quot;section-32&quot;&gt;（考点）协议的原理、端口号，下层运输层协议&lt;/h3&gt;

&lt;p&gt;DNS协议：端口为53  下层运输层协议：UDP
HTTP协议：端口为80 下层运输层协议：TCP
FTP协议：端口21(控制端口) 20(数据端口) 下层传输协议：TCP
STMP协议：端口25 下层传输协议：TCP&lt;/p&gt;

&lt;p&gt;一般来说：SMTP TELNET HTTP FTP 使用的是可靠字节流传送，即TCP，其它的为UDP（DNS, TFTP, RIP, DHCP, SNMP, NFS, IGMP）。&lt;/p&gt;

&lt;h3 id=&quot;dns--ip-&quot;&gt;DNS 域名和 IP 地址映射&lt;/h3&gt;

&lt;p&gt;主要功能：实现主机名和IP地址的映射。
其它功能：主机别名，邮件服务器别名，负载平衡等等。
实现方法：分级域名服务器上实现分布式数据库。&lt;/p&gt;

&lt;p&gt;了解分级域名的概念：根域名 / 顶级域名 / 一级域名 / …
了解资源记录的四元组 RR = (type, name, value, ttl) 参数的含义&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Type = A, AAAA, NS, CNAME, MX 的意义以及四元组的格式&lt;/li&gt;
  &lt;li&gt;TTL 的含义：缓存有效时间&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DNS的信息格式 —— 查询 Query + 相应 Reply 两种报文
理解DNS查询过程 —— 书上P243
- 迭代查询过程
- 递归查询过程&lt;/p&gt;

&lt;h3 id=&quot;web--www&quot;&gt;Web / WWW&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;URL格式： 协议://主机名:端口号/路径?查询参数1=值1&amp;amp;查询参数2=值2…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;http---&quot;&gt;HTTP 持久 和 非持久&lt;/h3&gt;
&lt;p&gt;基本概念：C/S（客户端/服务器）模式&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;了解HTTP的点击URL的过程 PPT P24&lt;/li&gt;
  &lt;li&gt;非持续连接
    &lt;ul&gt;
      &lt;li&gt;非持续连接 每个文档对象两个RTT开销&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;持续连接：
    &lt;ul&gt;
      &lt;li&gt;流水线的持续连接 每个文档对象一个RTT开销&lt;/li&gt;
      &lt;li&gt;非流水线的持续连接 所有文档对象共一个RTT开销&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;了解传送的图谱&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTTP 有两类报文：请求报文 / 响应报文
HTTP 请求报文的方法：GET / POST / OPTION / DELETE / PUT / HEAD / TRACE / CONNECT
HTTP 响应状态码：1xx 表示通知信息 / 2xx 成功 / 3xx 重定向 / 4xx 客户端差错 / 5xx 服务器端差错
HTTP 的状态：无状态 / 有状态(Cookie / Session)
了解两种报文的大致结构 PPT P26
了解代理服务器和Web内容缓存的概念&lt;/p&gt;

&lt;h3 id=&quot;mail-protocol&quot;&gt;Mail Protocol&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;SMTP 简单电子邮件传送协议
    &lt;ul&gt;
      &lt;li&gt;电子邮件发送协议&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;POP / IMAP
    &lt;ul&gt;
      &lt;li&gt;电子邮件读取协议&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MIME
    &lt;ul&gt;
      &lt;li&gt;通用因特网邮件扩充，会在邮件首部说明传送的数据类型&lt;/li&gt;
      &lt;li&gt;MIME标准规定 Content-Type 说明必须还有两个标识符：type + subtype 即类型和子类型&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;理解电子邮件收发的两种方式
    &lt;ul&gt;
      &lt;li&gt;用户代理 -&amp;gt; SMTP -&amp;gt; 发送端邮件服务器 SMTP -&amp;gt; 接收端邮件服务器 -&amp;gt; POP/IMAP 读取邮件 -&amp;gt; 用户代理&lt;/li&gt;
      &lt;li&gt;用户浏览器 -&amp;gt; HTTP -&amp;gt; 发送端邮件服务器 -&amp;gt; SMTP -&amp;gt; 接收端邮件服务器 -&amp;gt; HTTP -&amp;gt; 用户浏览器&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;电子邮件地址格式：username@domain&lt;/li&gt;
  &lt;li&gt;过程：链接建立 -&amp;gt; 邮件传送 -&amp;gt; 链接释放&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ftp&quot;&gt;FTP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;两个从属进程：控制进程 + 数据传送进程&lt;/li&gt;
  &lt;li&gt;注意：FTP的控制信息是&lt;strong&gt;带外&lt;/strong&gt;传送的，拥有&lt;strong&gt;两个&lt;/strong&gt;端口号&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-33&quot;&gt;大题专题（应用题）&lt;/h2&gt;

&lt;h3 id=&quot;dns-ip&quot;&gt;DNS查询过程 （域名和IP地址的对应关系查询）&lt;/h3&gt;

&lt;h3 id=&quot;arp-dns&quot;&gt;理解网络中的行为，ARP, DNS协议&lt;/h3&gt;

&lt;h3 id=&quot;section-34&quot;&gt;网络路由实验，静态路由&lt;/h3&gt;

&lt;h3 id=&quot;tcp-1&quot;&gt;TCP连接建立过程，数据传送过程，断开过程中分组的具体序号和标志&lt;/h3&gt;

&lt;h3 id=&quot;tcp-2&quot;&gt;TCP的拥塞控制&lt;/h3&gt;

&lt;h3 id=&quot;rip&quot;&gt;RIP路由表的建立，变化过程&lt;/h3&gt;

&lt;h3 id=&quot;ip-4&quot;&gt;IP地址划分&lt;/h3&gt;

&lt;h3 id=&quot;switch-1&quot;&gt;SWITCH自学习过程&lt;/h3&gt;

&lt;h3 id=&quot;checksum&quot;&gt;Checksum对首部的计算&lt;/h3&gt;
</description>
        <pubDate>Fri, 09 Jan 2015 00:00:00 +0800</pubDate>
        <link>http://www.surfacew.com/learner/2015/01/09/NetworkTheory/</link>
        <guid isPermaLink="true">http://www.surfacew.com/learner/2015/01/09/NetworkTheory/</guid>
        
        <category>me</category>
        
        
        <category>learner</category>
        
      </item>
    
      <item>
        <title>再见 2014， 你好 2015</title>
        <description>&lt;p&gt;人，总是向前看的，但是有时在年末的时候，回顾一番，看看有形无形的收获，也是一种享受。接下来我也来梳理一下 2014 的轨迹，想想还有点小激动呢~&lt;/p&gt;

&lt;p&gt;1月，考试狗，为了及格而拼命着 …… 当然，也从侧面也证明了本人逃课率50%以上（是的，平均两节翘掉一节）却仍然不挂科的能力；更讽刺大学教育体系的丑陋。&lt;/p&gt;

&lt;p&gt;2月，回归内江，假期真美！各种美食，各种游玩。还是家乡好，人美，景美，生活简单。当然，闲适是家乡的主题，和着妹妹们，看完了几季行尸走肉，还顺带玩了几圈麻将，这等生活，岂不令人陶醉。爆竹声中，辞旧迎新，一家人围坐春晚前，想着也觉得挺幸福的！&lt;/p&gt;

&lt;p&gt;3月2日，狗腾生日，一寝室的人，密室逃脱，嘻嘻。&lt;/p&gt;

&lt;p&gt;3月6日，和着罡罡去了林大，第二次听取百度FEX经理介绍前端的发展线路，感受很深，为未来的百度实习埋下种子。&lt;/p&gt;

&lt;p&gt;3月 - 4月，请叫我技术狗，也可以叫我码农，天天就码代码，还好没猝死… 
真心敲了好多代码，感觉那段日子了，除了代码就是代码了，梦里也是代码，醒来还是代码 = =||&lt;/p&gt;

&lt;p&gt;3月 - 4月，竭尽全力为了 KTree 这个项目的存活和发展，总是待在806实验室中，朝朝暮暮地捣鼓，感觉时间过得很快。自然，这些时日让我的前端技术方面由量变引发质变。期间翻遍了图书馆，阅读了各类事关前端的书籍，只为 KTree 前端能够足够强大。然而没想到的是，这番举措，最终带来的益处，是让我平滑过渡到了百度，却埋葬了 KTree（后期叫做 KGraph）。人生，很神奇，不是么？&lt;/p&gt;

&lt;p&gt;3月 - 4月，和着研究生学长，在贝壳的研究生实验室里开发一个医疗机构的后台 CRM（客户关系管理）系统。虽然前端很简单，但是仍然浪费了很多时间，让开发周期拖了好久。终究在6月得到了2000￥的报酬。CRM，是我和罡罡开发的第一个可交付使用的前端项目，也历练了我开发一般系统前端能力。&lt;/p&gt;

&lt;p&gt;4月，认真学习了关于数据结构和基础算法的知识，读了两本混杂的小说，看了些许漫画，觉得人生豁达了。同时开始进入微博中一个家伙的世界。&lt;/p&gt;

&lt;p&gt;5月，泡图书馆日子，往往是最美的。5月的一些时日，是我能感到的最为宁静、安详和舒适的日子。因为我总能很轻易地沉浸在一些事情之中，无论是思考、学习还是设计，都让我感到顺心。&lt;/p&gt;

&lt;p&gt;5月5日，惊喜！在4月偶然投得的一封简历，竟然被挖出来，通知我去面试了！一番准备之后，拿到了百度实习的 Offer，这是本年度最强喜事了！&lt;/p&gt;

&lt;p&gt;5月18日，出行 CBD，围着央视的大楼卖萌，在林立的高楼间穿梭。那时候，思考了蛮多关于未来的事情，关于金钱，关于事业和关于梦想。顺带参观了日坛公园。&lt;/p&gt;

&lt;p&gt;5月28日，806的宴席，一堆人，喝酒吃饭，难得的集体感。&lt;/p&gt;

&lt;p&gt;6月2日，和导员，君爷，出行天坛，顺带游玩西海。高中的朋友，还是真正的朋友！感谢你们让我的生活如此的美好！再者，人满为患的天坛，风趣讽刺的三人组，也是醉了。&lt;/p&gt;

&lt;p&gt;6月17日，考试期间返乡，我就是那么任性，冒着挂科的风险，在家安逸舒适地待了几天，虽然短暂，但令人舒适，随后屁颠屁颠地坐火车归京，一路上结识了一位清华微电子系的研究生，无所不谈，令人心快，感觉这时间的流逝比火车还快！&lt;/p&gt;

&lt;p&gt;7月1日，百度实习开始，生活从此进入了一种不同的境界。要同时兼容：学习、工作和生活的“三线程”模型，嘿嘿，我自有一套！&lt;/p&gt;

&lt;p&gt;7月 - 12月，为期6个月的百度实习能够给自身带来的收获是巨大的。百度实习的收获，不仅仅是经济支持（不过，说实话，有了这比钱，生活更溜了！），不仅仅是对专业技能的历练，也是对职场、工作和百度体系更高层面的认知，更是对行业的反思，对工业界，对商业界以及学术界的反思。至少现在我很清楚百度人，至少是技术从事人员在从事着什么样的工作，过着怎样的生活，这是一种怎样的体验了。&lt;/p&gt;

&lt;p&gt;7月8日，KGraph 冻结，接受严冬的摧残，等待春天的命运。&lt;/p&gt;

&lt;p&gt;7月13日，803的麻辣烫之行和后会无期的电影。有时候，和803的一堆室友一起行动是一件非常快乐的事情！一路上疯疯癫癫，点赞！&lt;/p&gt;

&lt;p&gt;8月1日，生来第一次，估计也是最后一次成为志愿者，免费观看了鸟巢汪峰的演唱会，自然也是生命中第一次参加演唱会，被那种千万人的场面震惊了OTZ。&lt;/p&gt;

&lt;p&gt;8月8日，Baidu Summer Party，难忘的一天，乃百度之盛宴！还记得 Robbin和他的小伙伴们 High 爆全场！&lt;/p&gt;

&lt;p&gt;8月11日，和佳莹看了驯龙记2，顺带逛了一番大钟寺的古玩市场，还记得两人相互拍照之后的合成图片，帅呆了！&lt;/p&gt;

&lt;p&gt;8月30日，十渡行，Baidu 的 Team-Building！一群程序员 High 爆了！不过北京外环的十渡风景区，还是一个蛮不错的地方，至少，有山水为伴，有工友为伴，觉得很开心，很快乐！（毕竟没有花一分钱嘛 = =）&lt;/p&gt;

&lt;p&gt;9月4日，和小学同学的故宫行，几年未见，也便能说说以前的故事，聊聊世间的变化了！&lt;/p&gt;

&lt;p&gt;10月，国庆节返乡，和家人大自然野炊，和弟弟漫步内江。&lt;/p&gt;

&lt;p&gt;10月 - 12月，806的一系列演讲，关于互联网，关于职业生涯，关于前端，以启发学弟，继承禄一湛学长的意志。&lt;/p&gt;

&lt;p&gt;11月2日，百度“实习四人帮”，出行五彩城。哥请客，吃了麻辣诱惑，味道很好，更重要的是，友谊天长地久！&lt;/p&gt;

&lt;p&gt;11月3日，生日，和着宿舍一帮人，吃了小火锅，很喜欢这种小资的生活节奏。再者，迁移了新工位，从百度大厦到中关村软件科技园二期。（以后，见人便可说：想当年，哥好歹也是在中关村，软件园待过的男人）生日当天，竟得到了百度的馈赠 —— 一个新工位，宽敞而明亮！我的心，也一样！&lt;/p&gt;

&lt;p&gt;11月5日，和一学弟在五道口的肯德基内常坐，什么都聊，关于这两年的大学生活，关于机遇，关于计算机，关于科学… 再者，APEC Blue，天真蓝啊~&lt;/p&gt;

&lt;p&gt;11月30日，上线了 blog.surfacew.com 从此，开始在这个博客上书写自己的故事、见解和技术文章。&lt;/p&gt;

&lt;p&gt;12月，为自发组织的一个叫做 Connectify 的项目，竭尽全力，开发出第一个原型。&lt;/p&gt;

&lt;p&gt;12月2日，KGraph结题答辩，留下丝丝遗憾，但愿褪去最后的稚气。&lt;/p&gt;

&lt;p&gt;12月10日，珍爱生命，远离考试。&lt;/p&gt;

&lt;p&gt;12月11日，破例玩英雄联盟三天，就玩寒冰艾希，请叫我：打了十多局的人机狗，谢谢。&lt;/p&gt;

&lt;p&gt;12月31日，送了自己一份跨年礼物，叫做 iPad Air 2。（去年是 5c, 估计明年是 MacBook Pro 吧，汗，败家啊）&lt;/p&gt;

&lt;p&gt;2014就这么过去了，蛮充实的，但是也有丝丝遗憾，无论怎么样都是我生命中独一无二的14年，它真的让我走得更远，看得更远。&lt;/p&gt;

&lt;p&gt;或许生命最美妙的不过于你能够真正感受到成长的足迹，感受到生命的历程中的美。&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Jan 2015 00:00:00 +0800</pubDate>
        <link>http://www.surfacew.com/me/2015/01/01/Hello2015Bye2014/</link>
        <guid isPermaLink="true">http://www.surfacew.com/me/2015/01/01/Hello2015Bye2014/</guid>
        
        <category>year</category>
        
        
        <category>me</category>
        
      </item>
    
      <item>
        <title>听泉</title>
        <description>&lt;p&gt;【日】东山魁夷&lt;/p&gt;

&lt;p&gt;鸟儿飞过旷野。一批又一批，成群的鸟儿接连不断地飞了过去。 &lt;/p&gt;

&lt;p&gt;有时候四五只联翩飞翔，有时候排成一字长蛇阵。看，多么壮阔的鸟群啊!…… &lt;/p&gt;

&lt;p&gt;鸟儿呜叫着，它们和睦相处，互相激励；有时又彼此憎恶，格斗，伤残，有的鸟儿因疾病、疲惫或衰老而失掉队伍。 &lt;/p&gt;

&lt;p&gt;今天，鸟群又飞过旷野。它们时而飞过碧绿的田原，看到小河在太阳照耀下流泻；时而飞过丛林，窥见鲜红的果实在树荫下闪灼。想从前，这样的地方有的是。可如今，到处都是望不到边的漠漠荒原。任凭大地改换了模样，鸟儿一刻也不停歇，昨天，今天，明天，它们继续打这里飞过。 &lt;/p&gt;

&lt;p&gt;不要认为鸟儿都是按照自己的意志飞翔的。它们为什么飞?它们飞向何方?谁都弄不清楚，就连那些领头的鸟儿也无从知晓。 &lt;/p&gt;

&lt;p&gt;为什么必须飞得这样快?为什么就不能慢一点呢? &lt;/p&gt;

&lt;p&gt;鸟儿只觉得光阴在匆匆忙忙中逝去了。然而，它们不知道时间是无限的，永恒的，逝去的只是鸟儿自己。它们像着了迷似地那样剧烈，那样急速地振膈翱翔。它们没有想到，这会招来不幸，会使鸟儿更快地从这块土地上消失。 &lt;/p&gt;

&lt;p&gt;鸟儿依然忽喇喇拍着翅膀，更急速，更剧烈地飞过去…… 
　　
森林中有一泓清澈的泉水，发出叮叮咚咚的响声，悄然流淌。这里有鸟群休息的地方，尽管是短暂的，但对于飞越荒原的鸟群说来，这小憩何等珍贵!地球上的一切生物，都是这样，一天过去了，又去迎接明天的新生。 &lt;/p&gt;

&lt;p&gt;鸟儿在清泉旁歇歇翅膀，养养精神，倾听泉水的絮语。鸣泉啊，你是否指点了鸟儿要去的方向？ &lt;/p&gt;

&lt;p&gt;泉水从地层深处涌出来，不间断地奔流着，从古到今，阅尽地面上一切生物的生死、荣枯。因此，泉水一定知道鸟儿应该飞去的方向。 &lt;/p&gt;

&lt;p&gt;鸟儿站在清澄水边，让泉水映照着身影，它们想必看到了自己疲倦的模样，它们终于明白了鸟儿作为天之骄子的时代已经一去不复返了。 &lt;/p&gt;

&lt;p&gt;鸟儿想随处都能看到泉水，这是困难的。因为，它们只顾尽快飞翔。 &lt;/p&gt;

&lt;p&gt;不过，它们似乎有所觉悟，这样连续飞翔下去，到头来，鸟群本身就会泯灭的，但愿鸟儿尽早懂得这个道理。 &lt;/p&gt;

&lt;p&gt;我也是群鸟中的一只，所有的人们都是在荒凉的不毛之地上飞翔不息的鸟儿。 &lt;/p&gt;

&lt;p&gt;人人心中都有一股泉水，日常的烦乱生活，遮蔽了它的声音，当你夜半突然醒来，你会从心灵的深处，听到幽然的鸣声，那正是潺谖的泉水啊！ &lt;/p&gt;

&lt;p&gt;回想走过的道路，多少次在这旷野上迷失了方向。每逢这个时候，当我听到心灵深处的鸣泉，我就重新找到了前进的标志。 &lt;/p&gt;

&lt;p&gt;泉水常常问我：你对别人，对自己，是诚实的吗?我总是深感内疚，答不出话来，只好默默低着头。&lt;/p&gt;

&lt;p&gt;我从事绘画，是出自内心的祈望：我想诚实地生活。心灵的泉水告诫我：要谦虚，要朴素，要舍弃清高和偏执。 &lt;/p&gt;

&lt;p&gt;心灵的泉水教导我：只有舍弃自我，才能看见真实。 &lt;/p&gt;

&lt;p&gt;舍弃自我是困难的，甚至是不可能的，我想。然而，絮絮低语的泉水明明白白对我说：&lt;strong&gt;美，正在于此&lt;/strong&gt;。&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Dec 2014 00:00:00 +0800</pubDate>
        <link>http://www.surfacew.com/article/2014/12/19/%E5%90%AC%E6%B3%89/</link>
        <guid isPermaLink="true">http://www.surfacew.com/article/2014/12/19/%E5%90%AC%E6%B3%89/</guid>
        
        <category>article</category>
        
        
        <category>article</category>
        
      </item>
    
      <item>
        <title>关于 KGraph 答辩</title>
        <description>&lt;p&gt;KGraph 最终所呈现的，是一个残缺不全的弃子的形态。&lt;/p&gt;

&lt;p&gt;答辩完毕后，心中存有些许阴霾。可以说真正让自己感觉沮丧的，不是老师的提问或故意的刁难，而是自己内心存有一种遗憾，一种没能够真正实现的遗憾。&lt;/p&gt;

&lt;p&gt;说来，KGraph 也是我人生中真正用心去做的第一个项目，我那时以为提携上一堆人，拥有共同的志趣（这很难实现）就能够走向所谓的成功。但理想和现实的鸿沟，终究还是断裂了群人之间的纽带……&lt;/p&gt;

&lt;p&gt;到头来，我也只能够感叹&lt;strong&gt;天时、地利、人和&lt;/strong&gt;之重要性。&lt;/p&gt;

&lt;p&gt;有时候，我会觉得 KGraph 对我而言，最重要的贡献是把我引荐到了百度，以及期间对代码，对技术的热枕，但这些确乎又显得虚无而不实。到头来，近半年的努力所造就的 KGraph，根本算不上是什么成果，也不是什么教训，只是我人生中一次颇有趣的探索的经历，期间教会了我很多为人做事的道理。&lt;/p&gt;

&lt;p&gt;我已经语无伦次了。&lt;/p&gt;

&lt;p&gt;就只想说：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Too young, too weak, we are all like that, there will be a long way to go, stay silent till you are strong enough.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;客观现实&lt;/strong&gt;大于主观描述，&lt;strong&gt;事实成果&lt;/strong&gt;大于过程诉说。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;现在，答辩完毕了。
最终为这个项目立了一块碑，上面刻下一行字：&lt;strong&gt;埋葬的不是遗憾，而是最后的稚气&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;SurfaceW
于贝壳
2014-12-02&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Dec 2014 00:00:00 +0800</pubDate>
        <link>http://www.surfacew.com/me/2014/12/02/KGraph/</link>
        <guid isPermaLink="true">http://www.surfacew.com/me/2014/12/02/KGraph/</guid>
        
        <category>kgraph</category>
        
        
        <category>me</category>
        
      </item>
    
      <item>
        <title>JavaScript 一些学习建议</title>
        <description>&lt;h1 id=&quot;js&quot;&gt;JS学习的若干建议&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;我自己学习 JS 所总结的一些经验，分享给大家&lt;strong&gt;参考&lt;/strong&gt;。&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;准备阶段：&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;What / Why / How？&lt;/em&gt; 的技术三问。&lt;/li&gt;
  &lt;li&gt;JS 这门语言能够用来干啥？
    &lt;ul&gt;
      &lt;li&gt;实现这些功能类似的而技术有哪些？但相比起来，为什么我要学习 JS？&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JS 学习和使用的意义是什么？有何用？&lt;/li&gt;
  &lt;li&gt;JS 学习之前，我的获取知识的渠道有哪些？它们是&lt;strong&gt;最优&lt;/strong&gt;的么？
    &lt;ul&gt;
      &lt;li&gt;书籍？视频？网页？教程？培训 …&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;定位我的学习目标。
    &lt;ul&gt;
      &lt;li&gt;Basic Level / Core Level / Advanced Level / Industry Level / Master Level&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;基础与核心主题：&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;JS 的语言核心的学习
    &lt;ul&gt;
      &lt;li&gt;JS 特性&lt;/li&gt;
      &lt;li&gt;词法结构 / 语法结构&lt;/li&gt;
      &lt;li&gt;类型 / 值 / 变量&lt;/li&gt;
      &lt;li&gt;语句&lt;/li&gt;
      &lt;li&gt;对象&lt;/li&gt;
      &lt;li&gt;数组&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;类和模块&lt;/li&gt;
      &lt;li&gt;正则表达式和匹配&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JS 的重要特征的强调
    &lt;ul&gt;
      &lt;li&gt;词法作用域&lt;/li&gt;
      &lt;li&gt;闭包&lt;/li&gt;
      &lt;li&gt;函式编程&lt;/li&gt;
      &lt;li&gt;匿名自调用函数&lt;/li&gt;
      &lt;li&gt;回调函数&lt;/li&gt;
      &lt;li&gt;柯里化函数&lt;/li&gt;
      &lt;li&gt;高阶函数&lt;/li&gt;
      &lt;li&gt;原型继承&lt;/li&gt;
      &lt;li&gt;类工厂函数&lt;/li&gt;
      &lt;li&gt;事件队列&lt;/li&gt;
      &lt;li&gt;异步事件 Deffered / Promise&lt;/li&gt;
      &lt;li&gt;…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JS 的 API 的学习
    &lt;ul&gt;
      &lt;li&gt;核心 API
        &lt;ul&gt;
          &lt;li&gt;Array / Date /  RegExp&lt;/li&gt;
          &lt;li&gt;事件系统&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;客户端 API
        &lt;ul&gt;
          &lt;li&gt;Window / Document / DOM  / CSS / Cookie &lt;/li&gt;
          &lt;li&gt;HTML5 API
            &lt;ul&gt;
              &lt;li&gt;LocalStorage / SessionStorage / Canvas …&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Node API&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JS 的主要框架的应用
    &lt;ul&gt;
      &lt;li&gt;经典框架：jQuery 的使用&lt;/li&gt;
      &lt;li&gt;MVC 框架：Backbone.js 的使用&lt;/li&gt;
      &lt;li&gt;SPA 应用：Angular.js 的使用&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;高级主题：&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;JS 的编码模式&lt;/li&gt;
  &lt;li&gt;JS 的设计模式
    &lt;ul&gt;
      &lt;li&gt;构造器模式 / 模块模式 / 工厂模式 / 单例模式&lt;/li&gt;
      &lt;li&gt;Pub / Sub 模式 / Facade 模式&lt;/li&gt;
      &lt;li&gt;MVC&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JS 的性能优化&lt;/li&gt;
  &lt;li&gt;JS 的模块化设计
    &lt;ul&gt;
      &lt;li&gt;CommonJS / AMD 规范&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JS 的主要框架的源码剖析
    &lt;ul&gt;
      &lt;li&gt;Underscore.js&lt;/li&gt;
      &lt;li&gt;jQuery&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JS 的服务器端应用
    &lt;ul&gt;
      &lt;li&gt;NodeJS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 30 Nov 2014 00:00:00 +0800</pubDate>
        <link>http://www.surfacew.com/tech/2014/11/30/SomeJSTips/</link>
        <guid isPermaLink="true">http://www.surfacew.com/tech/2014/11/30/SomeJSTips/</guid>
        
        <category>tech</category>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>时间的谏言</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;此文章写于：2013年12月27日&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;好久没有写点什么了，自然想提笔来磨磨笔头。&lt;/p&gt;

&lt;p&gt;今天，读了程浩的&lt;em&gt;《烧红的月亮》&lt;/em&gt;一文，颇有感触，便来一说，关于时间的一些思索。从作者的一段话开始：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“人们总是习惯相信眼前的美好，而忘了任何美好的事物，都有从辉煌走向衰败的一天。花开自有花落，相聚自有别离。时间就像一只目不转睛的眼睛，它看清了虚假，看清了残缺，看清了岁月的残酷。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;时间，对于万物来说，是公平的。&lt;/p&gt;

&lt;p&gt;它演绎着新旧的交替的法则，它能够让最美好的事物顷刻凋零的同时又创造出勃勃生机的新的事物来代替那些陈旧腐烂的个体。四季的交叠，生命的轮回，让世界周而复始地运作着，看似永无止境，美好至极。&lt;/p&gt;

&lt;p&gt;但时间，对于人类来说，却是无比残酷的。&lt;/p&gt;

&lt;p&gt;古人自有兰亭之序，叹盛宴之难再；赤壁之下，举杯兴怀，哀余生之须臾，羡江河之不穷。而今亦有将人生比作通向坟墓的列车，过往之人，上上下下，窗外景致，来去匆匆。&lt;/p&gt;

&lt;p&gt;正因为人是知性与感性的动物，明知注定死亡却依旧昂然前行；明知终将逝去一切，还依旧贪婪地索取。不知是骨子里欲望的摆布还是时间罪恶的潜影。时间就是这只目不转睛的“眼睛”，看透一生的无知，空虚和残缺，告诉我们残酷的岁月终究会侵蚀梦想，模糊意识，泯灭身躯！&lt;/p&gt;

&lt;p&gt;当黑夜降临，宁静之中，透过这只眼睛，却时常能看到用光阴来洗出的胶片中，充斥着虚假，空虚，残缺，丑恶，无知…&lt;/p&gt;

&lt;p&gt;便自省之，若明天就是末日，就是自己走向死亡的一天，镜中的自我将不复存在，那么看似漫长的一日，自己的所作所为，孰是孰非？&lt;/p&gt;

&lt;p&gt;便有此“三省”，以明鉴自我是否虚度光阴：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;生命之宗旨是什么？（支撑我的信仰是什么？生的意义是什么？还是说我的人生不需要这等信仰和意义？苟且存活乃是真理…以此衡量个人的价值取向）&lt;/li&gt;
  &lt;li&gt;这一天，有价值么，价值体现于何处？（没有价值也是价值，价值的衡量尺度不是金钱，而是信仰，只不过众多国人以金钱为价值之尺度，也就没有办法了）&lt;/li&gt;
  &lt;li&gt;这一天，有虚度么，还是我就需要让光阴虚度！？并且我为之后悔么？（偏离个人价值的方向，我为此感到后悔么？）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;P.S. 最后，我很想补充一下程浩没有说完的话：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“人们总是习惯相信眼前的美好，而忘了任何美好的事物，都有从辉煌走向衰败的一天。花开自有花落，相聚自有别离。时间就像一只目不转睛的眼睛，它看清了虚假，看清了残缺，看清了岁月的残酷。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;“鉴于如此，自然不会选择去做虚假的、残缺之事。相反之，人们应该选择珍惜眼前美好的一切！趁着自己生命还没有走向衰败的时候，默默积淀着沉甸甸的梦想；趁着花瓣还没有分扬飘落的时候，尽情绽放青春的丰姿；趁着相聚在一起还没有挥泪别离，分道扬镳的时候，分享在一起的喜怒哀乐的时光；趁着还能够一觉醒来看见窗外依旧灿烂的阳光而觉得幸福的时候，去做好生命中每一件事情，并且将自身命运所给予的条件发挥到最佳！”&lt;/p&gt;

&lt;p&gt;这就是我对待你，这残酷的时间，最真诚的态度！&lt;/p&gt;
</description>
        <pubDate>Fri, 28 Nov 2014 00:00:00 +0800</pubDate>
        <link>http://www.surfacew.com/me/2014/11/28/AboutTime/</link>
        <guid isPermaLink="true">http://www.surfacew.com/me/2014/11/28/AboutTime/</guid>
        
        <category>me</category>
        
        
        <category>me</category>
        
      </item>
    
      <item>
        <title>关于自我</title>
        <description>&lt;pre&gt;&lt;code&gt;我，希望自己是一名摄影师 —— 能够用自己独特的视角，捕捉生活中美好的画面！
我，希望自己是一名平面设计师 —— 能够在空白的纸面中点染美妙的图景！
我，希望自己是一名复杂系统的设计师 —— 能够用心设计出令这个世界更美的秩序！
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而我现在，是一名 Web 前端工程师，我希望自己能够尽力让 Web 变得更美，让信息的展现、传递和交互的方式变得更和谐。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/articles/2014-11-01-intro.JPG&quot; alt=&quot;Intro&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Nov 2014 00:00:00 +0800</pubDate>
        <link>http://www.surfacew.com/me/2014/11/01/Self%20Introduction/</link>
        <guid isPermaLink="true">http://www.surfacew.com/me/2014/11/01/Self%20Introduction/</guid>
        
        <category>me</category>
        
        
        <category>me</category>
        
      </item>
    
  </channel>
</rss>
